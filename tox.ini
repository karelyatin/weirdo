[tox]
minversion = 1.6
envlist = py27
skipdist = True

[testenv]
usedevelop = True
install_command = pip install -U {opts} {packages}
setenv = VIRTUAL_ENV={envdir}
deps = -r{toxinidir}/test-requirements.txt

[testenv:docs]
commands =
    ansible-galaxy install -r ansible-role-requirements.yml --ignore-errors
    python setup.py build_sphinx

[testenv:ansible-lint]
basepython = python3
whitelist_externals = bash
commands =
    ansible-galaxy install -r ansible-role-requirements.yml --ignore-errors
    bash -c "find . -type f ! -path '*jenkins/*' ! -path '*.tox/*' -regex '.*.y[a]?ml' -print0 | xargs -t -n1 -0 ansible-lint -x ANSIBLE0006,ANSIBLE0010,ANSIBLE0011,ANSIBLE0012,ANSIBLE0013,ANSIBLE0014,ANSIBLE0019"
setenv =
    ANSIBLE_CONFIG = {toxinidir}/playbooks/ansible.cfg
    PYTHONUNBUFFERED = 1

[testenv:ansible-playbook]
basepython = python3
commands =
    ansible-galaxy install -r ansible-role-requirements.yml --ignore-errors
    ansible-playbook {posargs}
passenv =
    HOME
    SSH_AUTH_SOCK
    USER
    ARA_DATABASE
    ARA_DATABASE_NAME
    CICO_API_KEY
    CICO_SSH_KEY
    JENKINS_URL
    BUILD_URL
    JOB_NAME
    BUILD_NUMBER
    DLRNAPI_USER
    DLRNAPI_PASSWD
    DLRNAPI_URL
    COMMIT_HASH
    DISTRO_HASH
    AGG_HASH
    INFO_URL
    JOB_SUCCESS
    ANSIBLE_SSH_RETRIES
    ANSIBLE_PYTHON_INTERPRETER
    WORKSPACE
    DESTINATION
    LOG_DISPLAY_URL
setenv =
    ANSIBLE_CONFIG = {toxinidir}/playbooks/ansible.cfg
    PYTHONUNBUFFERED = 1
